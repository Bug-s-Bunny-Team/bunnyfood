AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  bunnyfood

  SAM Template for bunnyfood

Globals:
  Function:
    Timeout: 60
    Runtime: python3.9
    Handler: function.app.lambda_handler
    Architectures:
      - x86_64
    Layers:
      - !Ref CommonLayer
      - !Ref DbLayer
    Environment:
      Variables:
        BUCKET_NAME: !Ref BackendBucket
        DB_USER: 'user'
        DB_PASSWORD: 'password'
        DB_HOST: 'db'
        DB_NAME: 'bunnyfood_dev'

Resources:
  #############################################################
  # Buckets

  BackendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 'bunnyfood-backend'

  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 'bunnyfood-backend'

  #############################################################
  # Layers

  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    LayerName: CommonLayer
    Properties:
      ContentUri: common
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: makefile

  DbLayer:
    Type: AWS::Serverless::LayerVersion
    LayerName: DBLayer
    Properties:
      ContentUri: db
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: makefile

  #############################################################
  # Functions

#  ScoringFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: functions/scoring/
#
#  SortingFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: functions/sorting/

  ScrapingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/scraping/
      Environment:
        Variables:
          INSTA_USERNAME: ''
          INSTA_SESSIONS_TABLE: ''
          SNS_SORTING_TOPIC: !Ref SortTopic

  #############################################################
  # Topics

  # API -> ScrapingFunction
  ScrapeTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: 'Scrape'
      FifoTopic: False

  # ScrapingFunction -> SortingFunction
  SortTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: 'Sort'
      FifoTopic: False

  # SortingFunction -> ScoringFunction
  ScoreTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: 'Score'
      FifoTopic: False